# ! py
# Bot body
# Copyright by @Truongchinh304

import os, telebot
from telebot import types 
from fpdf import FPDF
from decimal import Decimal, ROUND_HALF_UP    
from PIL import Image, ImageDraw, ImageFont
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup    


API_KEY_BOT = "THAY_API_BOT"
bot = telebot.TeleBot(API_KEY_BOT)
file_path_inforbody = "/sdcard/download/codingpython/body.txt" # File txt l∆∞u th√¥ng tin ng∆∞·ªùi d√πng


@bot.message_handler(commands=['start'])
def start(message):
    user_name = message.from_user.username
    if not user_name :
        full_name = message.from_user.first_name + " " + message.from_user.last_name
    else:    
        full_name = user_name
    keyboard = InlineKeyboardMarkup()
    button_dslenh = InlineKeyboardButton(text="üìú Danh s√°ch l·ªánh", callback_data = "xem_danh_sach_lenh")
    keyboard.row(button_dslenh)
    bot.send_message(message.chat.id, f"<b>Ch√†o m·ª´ng {full_name} ƒë·∫øn v·ªõi bot t√≠nh ch·ªâ s·ªë c∆° th·ªÉ\n\nNh·∫•n n√∫t üëá ƒë·ªÉ xem danh s√°ch l·ªánh</b>", parse_mode = "HTML", reply_markup=keyboard)    
    
    
@bot.message_handler(commands=['nhapthongtin'])
def nhap_thong_tin(message):
    thong_tin = message.text.split(maxsplit=5)
    User_id = message.from_user.id
    
    if len(thong_tin) < 6:
        bot.send_message(message.chat.id, "<b>Vui l√≤ng nh·∫≠p ƒë√∫ng m·∫´u: /nhapthongtin [c√¢n n·∫∑ng (kg)] [chi·ªÅu cao (m)] [tu·ªïi] [gi·ªõi t√≠nh (m/w)] [ch·ªâ s·ªë R]</b>", parse_mode = "HTML")
        return 
    try:
        can_nang = float(thong_tin[1])
        chieu_cao = float(thong_tin[2])
        tuoi = int(thong_tin[3])
        gioi_tinh = thong_tin[4]
        chi_so_R = int(thong_tin[5])
        
        # Ki·ªÉm tra th√¥ng tin nh·∫≠p v√†o  
        if not (10 <= can_nang <= 150):
            bot.send_message(message.chat.id, "<b>C√¢n n·∫∑ng n·∫±m trong kho·∫£ng 10 - 150 kg</b>", parse_mode="HTML")
            return
        if not (0.4 <= chieu_cao <= 2.5):
            bot.send_message(message.chat.id, "<b>Chi·ªÅu cao n·∫±m trong kho·∫£ng 0.4 - 2.5 m</b>", parse_mode="HTML")
            return
        if not (10 <= tuoi <= 80):
            bot.send_message(message.chat.id, "<b>Tu·ªïi n·∫±m trong kho·∫£ng 10 - 80</b>", parse_mode="HTML")
            return
        if gioi_tinh not in ["m","w","M","W"]:
            bot.send_message(message.chat.id, "<b>Nh·∫≠p [m ho·∫∑c M] n·∫øu b·∫°n l√† ƒë√†n √¥ng\nNh·∫≠p [w ho·∫∑c W] n·∫øu b·∫°n l√† ph·ª• n·ªØ</b>", parse_mode="HTML")
            return
        if chi_so_R not in [1, 2, 3, 4, 5]:
            bot.send_message(message.chat.id, "<b>Ch·ªâ s·ªë v·∫≠n ƒë·ªông (R) thu·ªôc kho·∫£ng [1, 2, 3, 4, 5]</b>", parse_mode="HTML")
            return
        
        lines = []
        if os.path.exists(file_path_inforbody):
            with open(file_path_inforbody, "r", encoding="utf-8") as file:
                lines = file.readlines()
        
        # Ki·ªÉm tra v√† x·ª≠ l√Ω ghi ƒë√® ho·∫∑c th√™m m·ªõi th√¥ng tin
        found = False
        with open(file_path_inforbody, "w", encoding="utf-8") as file:
            for line in lines:
                if str(User_id) in line:
                    # N·∫øu user_id t·ªìn t·∫°i, ghi ƒë√® th√¥ng tin m·ªõi l√™n
                    file.write(f"{User_id} - {can_nang} - {chieu_cao} - {tuoi} - {gioi_tinh} - {chi_so_R}\n")
                    found = True
                else:
                    file.write(line)
                    
        with open(file_path_inforbody, "w", encoding = "utf-8") as file:
            file.write(f"{User_id} - {can_nang} - {chieu_cao} - {tuoi} - {gioi_tinh} - {chi_so_R}\n")
       
        bot.send_message(message.chat.id, "<b>Th√¥ng tin c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng!</b>", parse_mode="HTML")
    except Exception as error:
        bot.send_message(message.chat.id, f"<b>ƒê√£ x·∫£y ra l·ªói: {error}!</b>", parse_mode="HTML")    


@bot.message_handler(commands=['pdf'])
def generate_pdf(message):
    User_id = message.from_user.id
    user_name = message.from_user.username
    if not user_name:
        full_name = message.from_user.first_name + " " + message.from_user.last_name
    else:
        full_name = user_name
    
    try:
        if os.path.exists(file_path_inforbody):
            with open(file_path_inforbody, "r", encoding="utf-8") as file:
                found = False
                for line in file:
                    if str(User_id) in line:
                        found = True
                        _, can_nang, chieu_cao, tuoi, gioi_tinh, hoat_dong = line.split(" - ")
                        can_nang = float(can_nang)
                        chieu_cao = float(chieu_cao)
                        tuoi = int(tuoi)
                        gioi_tinh = gioi_tinh.strip()
                        chi_so_R = float(hoat_dong.strip())
                        break
                
                if not found:
                    bot.send_message(message.chat.id, "<b>Kh√¥ng t√¨m th·∫•y th√¥ng tin c·ªßa b·∫°n. Vui l√≤ng nh·∫≠p th√¥ng tin v·ªõi l·ªánh /nhapthongtin</b>", parse_mode="HTML")
                    return
        else:
            bot.send_message(message.chat.id, "<b>Kh√¥ng t√¨m th·∫•y t·ªáp l∆∞u tr·ªØ th√¥ng tin</b>", parse_mode="HTML")
            return
        
        # T√≠nh BMI, BMR, TDEE
        tinh_chi_so_bmi = Decimal(can_nang) / Decimal(chieu_cao * chieu_cao)
        tinh_chi_so_bmi = tinh_chi_so_bmi.quantize(Decimal("0.001"), rounding=ROUND_HALF_UP)
        if gioi_tinh in ["m","M"]:
            tinh_chi_so_bmr = Decimal(655) + (Decimal(9.6) * Decimal(can_nang)) + (Decimal(1.8) * Decimal(chieu_cao)) - (Decimal(4.7) * Decimal(tuoi))
        else:
            tinh_chi_so_bmr = Decimal(66) + (Decimal(13.7) * Decimal(can_nang)) + (Decimal(5) * Decimal(chieu_cao)) - (Decimal(6.8) * Decimal(tuoi))
        tinh_chi_so_bmr = tinh_chi_so_bmr.quantize(Decimal("0.001"), rounding=ROUND_HALF_UP)    
        he_so_hoat_dong = {
            1: 1.2,
            2: 1.375,
            3: 1.55,
            4: 1.725,
            5: 1.9
        }
        bac_he_so_hoat_dong = {
            1: "Kh√¥ng v·∫≠n ƒë·ªông", 
            2: "V·∫≠n ƒë·ªông nh·∫π",
            3: "V·∫≠n ƒë·ªông v·ª´a",
            4: "V·∫≠n ƒë·ªông nhi·ªÅu",
            5: "V·∫≠n ƒë·ªông r·∫•t nhi·ªÅu"
        }    
        if chi_so_R in he_so_hoat_dong:
            tinh_chi_so_tdee = tinh_chi_so_bmr * Decimal(he_so_hoat_dong[chi_so_R])
            tinh_chi_so_tdee = tinh_chi_so_tdee.quantize(Decimal("0.001"), rounding=ROUND_HALF_UP)
        else:
            bot.send_message(message.chat.id, "<b>Vui l√≤ng nh·∫≠p ƒë√∫ng ch·ªâ s·ªë ho·∫°t ƒë·ªông</b>", parse_mode = "HTML")    
            return 
        
        # Kh·ªüi t·∫°o file PDF, ƒë·ªãnh d·∫°ng ph√¥ng ch·ªØ unicode kh√¥ng b·ªã l·ªói
        pdf = FPDF()
        pdf.add_page()
        pdf.add_font('DejaVu', '', '/sdcard/download/dejavu-sans/DejaVuSans.ttf', uni=True) # ƒê∆∞·ªùng d·∫´n ƒë·∫øn file DejaVuSans.ttf
        pdf.set_font('DejaVu', '', 14) # Font DejaVu c·ª° ch·ªØ 12
        
        pdf.multi_cell(200, 15, txt=f"CH·ªà S·ªê C∆† TH·ªÇ C·ª¶A {full_name.upper()}", align='C')
        pdf.multi_cell(200, 15, txt=f"‚û§ C√¢n n·∫∑ng: {can_nang} kg")
        pdf.multi_cell(200, 15, txt=f"‚û§ Chi·ªÅu cao: {chieu_cao} m")
        pdf.multi_cell(200, 15, txt=f"‚û§ Tu·ªïi: {tuoi}")
        pdf.multi_cell(200, 15, txt=f"‚û§ Gi·ªõi t√≠nh: {'Nam' if gioi_tinh == 'm' else 'N·ªØ'}")
        pdf.multi_cell(200, 15, txt=f"‚û§ Ch·ªâ s·ªë ho·∫°t ƒë·ªông (R): {he_so_hoat_dong[chi_so_R]} - {bac_he_so_hoat_dong[chi_so_R]}")
        pdf.multi_cell(200, 15, txt=f"‚û§ Ch·ªâ s·ªë BMI: {tinh_chi_so_bmi} kg/m¬≤")
        pdf.multi_cell(200, 15, txt=f"‚û§ Ch·ªâ s·ªë BMR (c·∫ßn): {tinh_chi_so_bmr} calo/ng√†y")
        pdf.multi_cell(200, 15, txt=f"‚û§ Ch·ªâ s·ªë TDEE (ti√™u th·ª•): {tinh_chi_so_tdee} calo/ng√†y")
        
        # In ra l·ªùi khuy√™n sau c√πng
        nhung_truong_hop = {
            1: f"‚û§ C∆° th·ªÉ c·ªßa {full_name.lower()} ƒëang thi·∫øu c√¢n\n>> L·ªùi khuy√™n: H√£y ƒÉn v√† t·∫≠p th·ªÉ d·ª•c nhi·ªÅu l√™n",
            2: f"‚û§ C∆° th·ªÉ c·ªßa {full_name.lower()} c√¢n ƒë·ªëi\n>> L·ªùi khuy√™n: Gi·ªØ d√°ng v·∫≠y ho√†i nh√°",
            3: f"‚û§ C∆° th·ªÉ c·ªßa {full_name.lower()} th·ª´a c√¢n\n>> L·ªùi khuy√™n: T·∫≠p th·ªÉ d·ª•c ngay th√¥i",
            4: f"‚û§ C∆° th·ªÉ c·ªßa {full_name.lower()} b√©o ph√¨\n>> L·ªùi khuy√™n: ƒÇn √≠t ƒë·ªì m·ª° l·∫°i ƒëi",
            5: f"‚û§ C∆° th·ªÉ c·ªßa {full_name.lower()} b√©o ph√¨ nguy hi·ªÉm\n>> L·ªùi khuy√™n: ƒêi kh√°m ngay ƒëi",
        }
        
        if tinh_chi_so_bmi < 18.5:
            pdf.multi_cell(200, 15, txt=nhung_truong_hop[1])
        elif 18.5 <= tinh_chi_so_bmi <= 24.9:
            pdf.multi_cell(200, 15, txt=nhung_truong_hop[2])
        elif 25 <= tinh_chi_so_bmi <= 29.9:
            pdf.multi_cell(200, 15, txt=nhung_truong_hop[3])
        elif 30 <= tinh_chi_so_bmi <= 34.9:
            pdf.multi_cell(200, 15, txt=nhung_truong_hop[4])
        else:
            pdf.multi_cell(200, 15, txt=nhung_truong_hop[5])
        
        # Xu·∫•t v√† g·ª≠i file     
        pdf_file_path = f"/sdcard/download/codingpython/Chi_so_co_the_{User_id}.pdf"
        pdf.output(pdf_file_path)
        with open(pdf_file_path, "rb") as file:
            bot.send_document(message.chat.id, file)
        bot.send_message(message.chat.id, "<b>Ho√†n th√†nh g·ª≠i file ch·ªâ s·ªë c∆° th·ªÉ !</b>", parse_mode = "HTML")
        os.remove(pdf_file_path) # Xo√° file sau khi g·ª≠i 
        
    except Exception as error:
        bot.send_message(message.chat.id, f"<b>ƒê√£ x·∫£y ra l·ªói: {error}!</b>", parse_mode="HTML")
        
        
def xem_danh_sach_lenh(message):
    danh_sach_lenh = (
        "<b>/nhapthongtin: l·ªánh d√πng nh·∫≠p th√¥ng tin ho·∫∑c s·ª≠a th√¥ng tin tr∆∞·ªõc khi t√≠nh ch·ªâ s·ªë\n"
        "/pdf: l·ªánh d√πng ghi ch·ªâ s·ªë BMI, BMR, TDEE r·ªìi g·ª≠i file cho ng∆∞·ªùi d√πng\n"
        "Ch·ªâ s·ªë R (ch·ªâ s·ªë v·∫≠n ƒë·ªông)\n"
        "+ 1: Kh√¥ng v·∫≠n ƒë·ªông\n" 
        "+ 2: V·∫≠n ƒë·ªông nh·∫π\n"
        "+ 3: V·∫≠n ƒë·ªông v·ª´a\n"
        "+ 4: V·∫≠n ƒë·ªông nhi·ªÅu\n"
        "+ 5: V·∫≠n ƒë·ªông r·∫•t nhi·ªÅu"
        "L∆∞u √Ω: Khi nh·∫≠p xem k·ªπ ƒë∆°n v·ªã ƒë·ªÉ tr√°nh sai s√≥t khi t√≠nh k·∫øt qu·∫£ !</b>"
    )   
    bot.send_message(message.chat.id, danh_sach_lenh, parse_mode = "HTML")


@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query_game(call):
    if call.data == "xem_danh_sach_lenh":
        xem_danh_sach_lenh(call.message)
        
        
@bot.message_handler(func=lambda message: True)
@bot.message_handler(content_types=['sticker','photo','video','document'])    
def tra_loi_ngoai_le(message):
    keyboard = InlineKeyboardMarkup()
    button_dslenh = InlineKeyboardButton(text="üìú Danh s√°ch l·ªánh", callback_data = "xem_danh_sach_lenh")
    keyboard.row(button_dslenh)
    bot.send_message(message.chat.id, "<b>Sai c√∫ ph√°p. Nh·∫•n n√∫t üëá ƒë·ªÉ xem danh s√°ch l·ªánh</b>", parse_mode = "HTML", reply_markup=keyboard)
        
        
bot.infinity_polling()
             
    
    
